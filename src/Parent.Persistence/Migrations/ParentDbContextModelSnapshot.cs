// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parent.Persistence;

#nullable disable

namespace Parent.Persistence.Migrations
{
    [DbContext(typeof(ParentDbContext))]
    partial class ParentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("Parent.Domain.Child", b =>
                {
                    b.Property<Guid>("Identifier")
                        .HasColumnType("TEXT")
                        .HasColumnName("ChildId");

                    b.Property<Guid>("GuardianIdentifier")
                        .HasColumnType("TEXT");

                    b.HasKey("Identifier");

                    b.HasIndex("GuardianIdentifier");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("Parent.Domain.Guardian", b =>
                {
                    b.Property<Guid>("Identifier")
                        .HasColumnType("TEXT")
                        .HasColumnName("GuardianId");

                    b.HasKey("Identifier");

                    b.ToTable("Guardians");
                });

            modelBuilder.Entity("Parent.Domain.Child", b =>
                {
                    b.HasOne("Parent.Domain.Guardian", null)
                        .WithMany()
                        .HasForeignKey("GuardianIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Parent.Domain.Toy", "ToyBox", b1 =>
                        {
                            b1.Property<string>("Upc")
                                .HasColumnType("TEXT")
                                .HasColumnName("Upc");

                            b1.Property<Guid>("ChildId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("ToyName");

                            b1.HasKey("Upc");

                            b1.HasIndex("ChildId");

                            b1.ToTable("ToyBox", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ChildId");
                        });

                    b.OwnsOne("Parent.Domain.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("ChildIdentifier")
                                .HasColumnType("TEXT");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("LastName");

                            b1.HasKey("ChildIdentifier");

                            b1.ToTable("Children");

                            b1.WithOwner()
                                .HasForeignKey("ChildIdentifier");
                        });

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("ToyBox");
                });

            modelBuilder.Entity("Parent.Domain.Guardian", b =>
                {
                    b.OwnsOne("Parent.Domain.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("GuardianIdentifier")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Address1")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("AddressLine1");

                            b1.Property<string>("Address2")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("AddressLine2");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("City");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("State");

                            b1.Property<string>("Zip")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Zip");

                            b1.HasKey("GuardianIdentifier");

                            b1.ToTable("Guardians");

                            b1.WithOwner()
                                .HasForeignKey("GuardianIdentifier");
                        });

                    b.OwnsOne("Parent.Domain.EmailAddress", "Email", b1 =>
                        {
                            b1.Property<Guid>("GuardianIdentifier")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Email");

                            b1.HasKey("GuardianIdentifier");

                            b1.ToTable("Guardians");

                            b1.WithOwner()
                                .HasForeignKey("GuardianIdentifier");
                        });

                    b.OwnsOne("Parent.Domain.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("GuardianIdentifier")
                                .HasColumnType("TEXT");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("LastName");

                            b1.HasKey("GuardianIdentifier");

                            b1.ToTable("Guardians");

                            b1.WithOwner()
                                .HasForeignKey("GuardianIdentifier");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
